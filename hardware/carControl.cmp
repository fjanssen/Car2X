	component carControl is
		port (
			clk_clk                         : in  std_logic                     := 'X';             -- clk
			reset_reset_n                   : in  std_logic                     := 'X';             -- reset_n
			carcontrol_master_waitrequest   : in  std_logic                     := 'X';             -- waitrequest
			carcontrol_master_readdata      : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			carcontrol_master_readdatavalid : in  std_logic                     := 'X';             -- readdatavalid
			carcontrol_master_burstcount    : out std_logic_vector(0 downto 0);                     -- burstcount
			carcontrol_master_writedata     : out std_logic_vector(31 downto 0);                    -- writedata
			carcontrol_master_address       : out std_logic_vector(9 downto 0);                     -- address
			carcontrol_master_write         : out std_logic;                                        -- write
			carcontrol_master_read          : out std_logic;                                        -- read
			carcontrol_master_byteenable    : out std_logic_vector(3 downto 0);                     -- byteenable
			carcontrol_master_debugaccess   : out std_logic                                         -- debugaccess
		);
	end component carControl;

